---
// src/components/Header.astro
import { SHOW_BRAGADO_RUSH } from "../config/flags";
const { pathname } = Astro.url;

const navLinks = [
  { href: "/", label: "Inicio" },
  { href: "/historia", label: "Historia" },
  { href: "/campeones", label: "Campeones" },
  { href: "/recorrido", label: "Recorrido" },
  ...(SHOW_BRAGADO_RUSH ? [{ href: "/bragado-rush", label: "Bragado Rush" }] : []),
  { href: "/#contacto", label: "Contacto" },
];

// Normaliza rutas para comparar (trata "/" y "/pagina/" igual)
const normalize = (p: string) => {
  if (!p) return "/";
  const cleaned = p.replace(/\/+$/, "");
  return cleaned === "" ? "/" : cleaned;
};
const isActive = (href: string) => normalize(pathname) === normalize(href.split("#")[0]);
---

<header
  class="fixed top-0 w-full bg-gradient-to-r from-celeste/90 via-celeste to-celeste/90 backdrop-blur-xl z-50 border-b border-amarillo/20 shadow-lg shadow-celeste/20"
  role="banner"
>
  <!-- Línea decorativa superior -->
  <div class="absolute top-0 left-0 w-full h-0.5 bg-gradient-to-r from-transparent via-amarillo to-transparent"></div>

  <nav
    class="max-w-7xl mx-auto flex justify-between items-center py-4 px-6 relative"
    role="navigation"
    aria-label="Navegación principal"
  >
    <!-- Logo -->
    <a
      href="/"
      class="flex items-center group relative z-10 isolate"
      aria-label="Ir a inicio de La Doble Bragado"
      data-logo
    >
      <img
        src="/images/ldb-logo-v5.svg"
        alt="La Doble Bragado"
        class="h-11 w-auto transition-transform duration-300 group-hover:scale-105 bg-transparent shadow-none drop-shadow-none ring-0 [filter:none] [box-shadow:none] mix-blend-normal"
        width="44"
        height="44"
        style="background:transparent!important; box-shadow:none!important; filter:none!important;"
      />
    </a>

    <!-- Desktop Navigation -->
    <ul class="hidden lg:flex items-center space-x-1 bg-white/10 rounded-2xl px-2 py-2 backdrop-blur-sm border border-white/20">
      {navLinks.map((link) => (
        <li>
          <a
            href={link.href}
            class:list={[
              "relative px-6 py-2.5 font-medium text-sm tracking-wide rounded-xl transition-all duration-300 group flex items-center",
              {
                "bg-amarillo text-oscuro shadow-lg shadow-amarillo/30 font-semibold": isActive(link.href)
              },
              {
                "text-white hover:text-amarillo hover:bg-white/10": !isActive(link.href)
              }
            ]}
            aria-current={isActive(link.href) ? "page" : false}
          >
            {/* Indicador activo */}
            {isActive(link.href) && (
              <span class="absolute -top-1 left-1/2 -translate-x-1/2 w-2 h-2 bg-amarillo rounded-full animate-pulse" aria-hidden="true"></span>
            )}
            {link.label}
            {/* Efecto hover */}
            {!isActive(link.href) && (
              <span class="absolute inset-0 bg-gradient-to-r from-amarillo/0 via-amarillo/20 to-amarillo/0 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300" aria-hidden="true"></span>
            )}
          </a>
        </li>
      ))}
    </ul>

    <!-- Mobile Menu Button -->
    <button
      id="mobile-menu-button"
      class="lg:hidden relative z-10 flex flex-col justify-center items-center w-12 h-12 rounded-xl bg-white/10 backdrop-blur-sm border border-white/20 focus:outline-none focus:ring-2 focus:ring-amarillo/80 transition-all duration-300 hover:bg-white/20"
      aria-label="Abrir menú de navegación"
      aria-expanded="false"
      aria-controls="mobile-menu"
      type="button"
    >
      <span class="sr-only">Abrir menú</span>
      <div class="relative w-6 h-6 flex flex-col justify-center items-center">
        <span id="bar1" class="absolute w-5 h-0.5 bg-white rounded-full transition-all duration-300 ease-out -translate-y-1.5"></span>
        <span id="bar2" class="absolute w-5 h-0.5 bg-white rounded-full transition-all duration-300 ease-out"></span>
        <span id="bar3" class="absolute w-5 h-0.5 bg-white rounded-full transition-all duration-300 ease-out translate-y-1.5"></span>
      </div>
    </button>
  </nav>

  <!-- Mobile Menu Overlay -->
  <div
    id="mobile-menu"
    class="lg:hidden fixed inset-0 z-40 translate-x-full transition-all duration-500 ease-out"
    aria-hidden="true"
  >
    <!-- Backdrop -->
    <div class="absolute inset-0 bg-oscuro/60 backdrop-blur-md opacity-0 transition-opacity duration-500" id="menu-backdrop"></div>

    <!-- Menu Panel -->
    <div class="absolute right-0 top-0 h-full w-80 max-w-[85vw] bg-gradient-to-b from-celeste via-celeste/95 to-celeste/90 backdrop-blur-xl border-l border-amarillo/30 shadow-2xl">
      <!-- Header del menú -->
      <div class="flex items-center justify-between p-6 border-b border-white/10">
        <h2 class="text-white font-semibold text-lg">Navegación</h2>
        <button
          id="close-menu-button"
          class="w-10 h-10 rounded-xl bg-white/10 hover:bg-white/20 transition-colors duration-200 flex items-center justify-center group"
          aria-label="Cerrar menú"
        >
          <svg class="w-5 h-5 text-white group-hover:text-amarillo transition-colors duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>

      <!-- Navigation Links -->
      <nav class="flex-1 px-6 py-8" role="navigation" aria-label="Navegación móvil">
        <ul class="space-y-3">
          {navLinks.map((link, idx) => {
            const active = isActive(link.href);
            return (
              <li class="transform transition-all duration-300 ease-out" style={`animation-delay: ${idx * 100}ms`}>
                <a
                  href={link.href}
                  data-nav-index={idx}
                  class:list={[
                    "relative flex items-center px-5 py-4 rounded-2xl font-medium text-base transition-all duration-300 group overflow-hidden",
                    active
                      ? "bg-amarillo text-oscuro shadow-lg shadow-amarillo/30 font-semibold"
                      : "text-white hover:text-amarillo hover:bg-white/10 border border-transparent hover:border-white/20"
                  ]}
                  aria-current={active ? "page" : false}
                >
                  {/* Efecto de brillo para enlaces activos */}
                  {active && (
                    <span class="absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent -skew-x-12 animate-pulse" aria-hidden="true"></span>
                  )}

                  {/* Icono indicador */}
                  <span class:list={[
                    "flex-shrink-0 w-2 h-2 rounded-full mr-4 transition-all duration-300",
                    active ? "bg-oscuro animate-pulse" : "bg-white/40 group-hover:bg-amarillo"
                  ]} aria-hidden="true"></span>

                  <span class="relative z-10">{link.label}</span>

                  {/* Flecha indicativa */}
                  <svg
                    class:list={[
                      "ml-auto w-4 h-4 transition-all duration-300",
                      active ? "text-oscuro rotate-0" : "text-white/60 group-hover:text-amarillo group-hover:translate-x-1"
                    ]}
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                    aria-hidden="true"
                  >
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                  </svg>
                </a>
              </li>
            );
          })}
        </ul>
      </nav>

      <!-- Footer del menú -->
      <div class="p-6 border-t border-white/10">
        <div class="text-center">
          <p class="text-white/60 text-sm">La Doble Bragado</p>
          <div class="flex justify-center mt-2 space-x-1">
            <span class="w-2 h-2 bg-amarillo rounded-full animate-pulse"></span>
            <span class="w-2 h-2 bg-amarillo/60 rounded-full animate-pulse" style="animation-delay: 200ms"></span>
            <span class="w-2 h-2 bg-amarillo/40 rounded-full animate-pulse" style="animation-delay: 400ms"></span>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const btn = document.getElementById("mobile-menu-button");
      const menu = document.getElementById("mobile-menu");
      const backdrop = document.getElementById("menu-backdrop");
      const closeBtn = document.getElementById("close-menu-button");
      const navItems = menu?.querySelectorAll('[data-nav-index]');

      const bar1 = document.getElementById("bar1");
      const bar2 = document.getElementById("bar2");
      const bar3 = document.getElementById("bar3");

      let isOpen = false;
      let focusPrev = null;

      const normalize = (p = "") => {
        const cleaned = p.replace(/\/+$/, "");
        return cleaned === "" ? "/" : cleaned;
      };

      // Estados activos
      const updateActiveStates = () => {
        const currentHash = window.location.hash;
        const currentPath = normalize(window.location.pathname);
        const navLinks = document.querySelectorAll('nav a[href]:not([data-logo])');

        navLinks.forEach(link => {
          const href = link.getAttribute('href') || "";
          const hrefPath = normalize(href.split("#")[0]);
          let active = false;

          if (href === "/#contacto") {
            active = currentHash === "#contacto";
          } else if (hrefPath === "/") {
            active = currentPath === "/" && currentHash !== "#contacto";
          } else {
            active = currentPath === hrefPath;
          }

          const isMobileItem = link.hasAttribute('data-nav-index');

          if (active) {
            link.classList.add('bg-amarillo','text-oscuro','shadow-lg','shadow-amarillo/30','font-semibold');
            link.classList.remove('text-white','hover:text-amarillo','hover:bg-white/10','border-transparent','hover:border-white/20');
            link.setAttribute('aria-current','page');
          } else {
            link.classList.remove('bg-amarillo','text-oscuro','shadow-lg','shadow-amarillo/30','font-semibold');
            link.classList.add('text-white','hover:text-amarillo','hover:bg-white/10');
            if (isMobileItem) link.classList.add('border-transparent','hover:border-white/20');
            link.removeAttribute('aria-current');
          }
        });
      };

      // Animación barras hamburger
      const animateBars = (toX = false) => {
        if (!bar1 || !bar2 || !bar3) return;
        if (toX) {
          bar1.style.transform = "translateY(0) rotate(45deg)";
          bar2.style.opacity = "0";
          bar2.style.transform = "scale(0)";
          bar3.style.transform = "translateY(0) rotate(-45deg)";
        } else {
          bar1.style.transform = "translateY(-6px) rotate(0deg)";
          bar2.style.opacity = "1";
          bar2.style.transform = "scale(1)";
          bar3.style.transform = "translateY(6px) rotate(0deg)";
        }
      };

      // Bloquear scroll
      const toggleBodyScroll = (lock = false) => {
        if (lock) {
          document.body.style.overflow = "hidden";
          document.body.style.position = "fixed";
          document.body.style.top = `-${window.scrollY}px`;
          document.body.style.width = "100%";
        } else {
          const scrollY = document.body.style.top;
          document.body.style.overflow = "";
          document.body.style.position = "";
          document.body.style.top = "";
          document.body.style.width = "";
          if (scrollY) window.scrollTo(0, parseInt(scrollY || '0') * -1);
        }
      };

      // Animar entrada de items
      const animateMenuItems = (show = true) => {
        if (!navItems) return;
        navItems.forEach((item, index) => {
          const delay = show ? index * 80 : 0;
          setTimeout(() => {
            if (show) {
              item.style.transform = "translateX(0)";
              item.style.opacity = "1";
            } else {
              item.style.transform = "translateX(100px)";
              item.style.opacity = "0";
            }
          }, delay);
        });
      };

      // Toggle menú
      const toggleMenu = (forceClose = false) => {
        if (!btn || !menu || !backdrop) return;
        const nextState = forceClose ? false : !isOpen;
        isOpen = nextState;

        // ARIA
        btn.setAttribute("aria-expanded", String(isOpen));
        menu.setAttribute("aria-hidden", String(!isOpen));

        if (isOpen) {
          menu.style.transform = "translateX(0)";
          backdrop.style.opacity = "1";
          animateBars(true);
          toggleBodyScroll(true);

          if (navItems) {
            navItems.forEach(item => {
              item.style.transform = "translateX(100px)";
              item.style.opacity = "0";
              item.style.transition = "all 0.4s cubic-bezier(0.4, 0, 0.2, 1)";
            });
          }
          setTimeout(() => animateMenuItems(true), 100);

          focusPrev = document.activeElement;
          const firstLink = menu.querySelector('[data-nav-index="0"]');
          setTimeout(() => firstLink?.focus(), 200);
          btn.setAttribute("aria-label", "Cerrar menú de navegación");
        } else {
          animateMenuItems(false);
          animateBars(false);
          setTimeout(() => {
            menu.style.transform = "translateX(100%)";
            backdrop.style.opacity = "0";
            toggleBodyScroll(false);
          }, 150);
          btn.setAttribute("aria-label", "Abrir menú de navegación");
          focusPrev?.focus?.();
        }
      };

      // Listeners
      btn?.addEventListener("click", () => toggleMenu());
      closeBtn?.addEventListener("click", () => toggleMenu(true));
      backdrop?.addEventListener("click", () => toggleMenu(true));
      menu?.querySelectorAll("a").forEach((link) => {
        link.addEventListener("click", () => setTimeout(() => toggleMenu(true), 100));
      });
      document.addEventListener("keydown", (e) => { if (e.key === "Escape" && isOpen) toggleMenu(true); });

      // Estados activos en navegación
      const handleActiveStates = () => updateActiveStates();
      window.addEventListener('hashchange', handleActiveStates);
      window.addEventListener('popstate', handleActiveStates);

      // Inicial
      updateActiveStates();

      // Inicializa estados del menú móvil
      if (navItems) {
        navItems.forEach(item => {
          item.style.transform = "translateX(100px)";
          item.style.opacity = "0";
        });
      }

      // Modal contacto (si aplica)
      const contactLinks = document.querySelectorAll('a[href="/#contacto"]');
      contactLinks.forEach(link => {
        link.addEventListener('click', (e) => {
          e.preventDefault();
          window.dispatchEvent(new CustomEvent('openNewsletterModal'));
        });
      });
    });
  </script>

  <style>
    /* Efecto glassmorphism sutil */
    header::before {
      content: '';
      position: absolute;
      inset: 0;
      background: linear-gradient(135deg, rgba(255,255,255,0.08) 0%, rgba(255,255,255,0.04) 100%);
      pointer-events: none;
    }
    /* Focus ring */
    button:focus-visible, a:focus-visible {
      outline: 2px solid rgba(247, 226, 0, 0.8);
      outline-offset: 2px;
      border-radius: 12px;
    }
    /* Util */
    @media (max-width: 1024px) {
      nav { padding-left: 1rem; padding-right: 1rem; }
    }
  </style>
</header>
